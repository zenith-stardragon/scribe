!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports["quilljs-parser"]=e():t["quilljs-parser"]=e()}(self,(()=>(()=>{"use strict";var t={};return(()=>{var e=t;Object.defineProperty(e,"__esModule",{value:!0}),e.parseQuillDelta=void 0;let r=!1;function s(t,e){t.insert.video||t.insert.image?function(t,e){e.paragraphs.push({embed:t.insert}),r=!1,a(e)}(t,e):t.insert.formula?function(t,e){var r;0===e.paragraphs.length&&a(e),null===(r=e.paragraphs[e.paragraphs.length-1].textRuns)||void 0===r||r.push({formula:t.insert.formula,attributes:t.attributes})}(t,e):"\n"===t.insert?function(t,e){t.attributes&&(e.paragraphs[e.paragraphs.length-1].attributes=t.attributes,"ordered"===t.attributes.list?r||(e.setup.numberedLists++,r=!0):r=!1),a(e)}(t,e):function(t,e){if(0===e.paragraphs.length&&a(e),t.insert.match(/\n/)){const s=t.insert.split(/(\n)/);for(const t of s)"\n"===t?(a(e),r=!1):n(t,e)}else n(t.insert,e,t.attributes)}(t,e)}function a(t){t.paragraphs.push({textRuns:[]})}function n(t,e,r){var s,a;r?(null===(s=e.paragraphs[e.paragraphs.length-1].textRuns)||void 0===s||s.push({text:t,attributes:r}),r.link&&e.setup.hyperlinks.push({text:t,link:r.link})):null===(a=e.paragraphs[e.paragraphs.length-1].textRuns)||void 0===a||a.push({text:t})}e.parseQuillDelta=function(t){r=!1;const e={paragraphs:[],setup:{numberedLists:0,hyperlinks:[]}};for(const r of t.ops)s(r,e);return e}})(),t})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,